{"ast":null,"code":"var _jsxFileName = \"/mnt/6A44EDAD44ED7C67/Projects/College/Javascript/instagram_website/frontend/src/components/AddComment.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddComment() {\n  _s();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await fetch(`http://localhost:3001/comments/${id}`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        content: comment,\n        photoId: id // Include the photoId as a parameter in the request body\n      })\n    });\n\n    const data = await res.json();\n    setComment(\"\");\n  };\n  const [comment, setComment] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"commentInput\",\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"commentInput\",\n        rows: \"3\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success mt-3\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(AddComment, \"rrFebW9Q28aJJ+M9AxcXUmcj4W0=\");\n_c = AddComment;\nvar _c;\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AddComment","_s","handleSubmit","e","preventDefault","res","fetch","id","method","credentials","headers","body","JSON","stringify","content","comment","photoId","data","json","setComment","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","onChange","target","type","_c","$RefreshReg$"],"sources":["/mnt/6A44EDAD44ED7C67/Projects/College/Javascript/instagram_website/frontend/src/components/AddComment.js"],"sourcesContent":["import {useState} from \"react\";\n\nfunction AddComment() {\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const res = await fetch(`http://localhost:3001/comments/${id}`, {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                content: comment,\n                photoId: id // Include the photoId as a parameter in the request body\n            })\n        });\n        const data = await res.json();\n        setComment(\"\");\n    };\n    const [comment, setComment] = useState(\"\");\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"commentInput\">Comment</label>\n                <textarea\n                    className=\"form-control\"\n                    id=\"commentInput\"\n                    rows=\"3\"\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                />\n            </div>\n            <button type=\"submit\" className=\"btn btn-success mt-3\">\n                Submit\n            </button>\n        </form>\n    )\n\n}"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAElB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,kCAAiCC,EAAG,EAAC,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,OAAO,EAAEC,OAAO;QAChBC,OAAO,EAAET,EAAE,CAAC;MAChB,CAAC;IACL,CAAC,CAAC;;IACF,MAAMU,IAAI,GAAG,MAAMZ,GAAG,CAACa,IAAI,EAAE;IAC7BC,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC;EACD,MAAM,CAACJ,OAAO,EAAEI,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,oBACIE,OAAA;IAAMqB,QAAQ,EAAElB,YAAa;IAAAmB,QAAA,gBACzBtB,OAAA;MAAKuB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBtB,OAAA;QAAOwB,OAAO,EAAC,cAAc;QAAAF,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC7C5B,OAAA;QACIuB,SAAS,EAAC,cAAc;QACxBf,EAAE,EAAC,cAAc;QACjBqB,IAAI,EAAC,GAAG;QACRC,KAAK,EAAEd,OAAQ;QACfe,QAAQ,EAAG3B,CAAC,IAAKgB,UAAU,CAAChB,CAAC,CAAC4B,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA,eACN5B,OAAA;MAAQiC,IAAI,EAAC,QAAQ;MAACV,SAAS,EAAC,sBAAsB;MAAAD,QAAA,EAAC;IAEvD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAGf;AAAC1B,EAAA,CAnCQD,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}