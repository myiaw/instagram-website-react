{"ast":null,"code":"var _jsxFileName = \"/mnt/6A44EDAD44ED7C67/Projects/College/Javascript/instagram_website/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { UserContext } from \"./userContext\";\nimport Header from \"./components/Header\";\nimport Photos from \"./components/Photos\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Profile from \"./components/Profile\";\nimport Logout from \"./components/Logout\";\nimport AddPhoto from \"./components/AddPhoto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /**\n   * Podatek o tem, ali je uporabnik prijavljen ali ne, bomo potrebovali v vseh komponentah.\n   * State je dosegljiv samo znotraj trenutne komponente. Če želimo deliti spremenljivke z\n   * ostalimi komponentami, moramo uporabiti Context.\n   * Vsebino Contexta smo definirali v datoteki userContext.js. Poleg objekta 'user', potrebujemo\n   * še funkcijo, ki bo omogočala posodabljanje te vrednosti. To funkcijo definiramo v komponenti App\n   * (updateUserData). V render metodi pripravimo UserContext.Provider, naš Context je potem dosegljiv\n   * v vseh komponentah, ki se nahajajo znotraj tega providerja.\n   * V komponenti Login ob uspešni prijavi nastavimo userContext na objekt s trenutno prijavljenim uporabnikom.\n   * Ostale komponente (npr. Header) lahko uporabijo UserContext.Consumer, da dostopajo do prijavljenega\n   * uporabnika.\n   * Context se osveži, vsakič ko osvežimo aplikacijo v brskalniku. Da preprečimo neželeno odjavo uporabnika,\n   * lahko context trajno hranimo v localStorage v brskalniku.\n   */\n  const [user, setUser] = useState(localStorage.user ? JSON.parse(localStorage.user) : null);\n  const updateUserData = userInfo => {\n    localStorage.setItem(\"user\", JSON.stringify(userInfo));\n    setUser(userInfo);\n  };\n\n  /**\n   * Na vrhu vključimo komponento Header, z naslovom in menijem.\n   * Nato vključimo Router, ki prikaže ustrezno komponento v odvisnosti od URL naslova.\n   * Pomembno je, da za navigacijo in preusmeritve uporabljamo komponenti Link in Navigate, ki sta\n   * definirani v react-router-dom modulu. Na ta način izvedemo navigacijo brez osveževanja\n   * strani. Klasične metode (<a href=\"\"> in window.location) bi pomenile osvežitev aplikacije\n   * in s tem dodatno obremenitev (ponovni izris komponente Header, ponastavitev Contextov,...)\n   */\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        user: user,\n        setUserContext: updateUserData\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(Photos, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/logout\",\n            element: /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"R368d+doxAyxHvSKndQmRJMSNJ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Routes","Route","UserContext","Header","Photos","Login","Register","Profile","Logout","AddPhoto","jsxDEV","_jsxDEV","App","_s","user","setUser","localStorage","JSON","parse","updateUserData","userInfo","setItem","stringify","children","Provider","value","setUserContext","className","title","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","element","_c","$RefreshReg$"],"sources":["/mnt/6A44EDAD44ED7C67/Projects/College/Javascript/instagram_website/frontend/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\nimport {UserContext} from \"./userContext\";\nimport Header from \"./components/Header\";\nimport Photos from \"./components/Photos\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Profile from \"./components/Profile\";\nimport Logout from \"./components/Logout\";\nimport AddPhoto from \"./components/AddPhoto\";\n\nfunction App() {\n    /**\n     * Podatek o tem, ali je uporabnik prijavljen ali ne, bomo potrebovali v vseh komponentah.\n     * State je dosegljiv samo znotraj trenutne komponente. Če želimo deliti spremenljivke z\n     * ostalimi komponentami, moramo uporabiti Context.\n     * Vsebino Contexta smo definirali v datoteki userContext.js. Poleg objekta 'user', potrebujemo\n     * še funkcijo, ki bo omogočala posodabljanje te vrednosti. To funkcijo definiramo v komponenti App\n     * (updateUserData). V render metodi pripravimo UserContext.Provider, naš Context je potem dosegljiv\n     * v vseh komponentah, ki se nahajajo znotraj tega providerja.\n     * V komponenti Login ob uspešni prijavi nastavimo userContext na objekt s trenutno prijavljenim uporabnikom.\n     * Ostale komponente (npr. Header) lahko uporabijo UserContext.Consumer, da dostopajo do prijavljenega\n     * uporabnika.\n     * Context se osveži, vsakič ko osvežimo aplikacijo v brskalniku. Da preprečimo neželeno odjavo uporabnika,\n     * lahko context trajno hranimo v localStorage v brskalniku.\n     */\n    const [user, setUser] = useState(localStorage.user ? JSON.parse(localStorage.user) : null);\n    const updateUserData = (userInfo) => {\n        localStorage.setItem(\"user\", JSON.stringify(userInfo));\n        setUser(userInfo);\n    }\n\n    /**\n     * Na vrhu vključimo komponento Header, z naslovom in menijem.\n     * Nato vključimo Router, ki prikaže ustrezno komponento v odvisnosti od URL naslova.\n     * Pomembno je, da za navigacijo in preusmeritve uporabljamo komponenti Link in Navigate, ki sta\n     * definirani v react-router-dom modulu. Na ta način izvedemo navigacijo brez osveževanja\n     * strani. Klasične metode (<a href=\"\"> in window.location) bi pomenile osvežitev aplikacije\n     * in s tem dodatno obremenitev (ponovni izris komponente Header, ponastavitev Contextov,...)\n     */\n    return (\n        <BrowserRouter>\n            <UserContext.Provider value={{\n                user: user,\n                setUserContext: updateUserData\n            }}>\n                <div className=\"App\">\n                    <Header title=\"Home\"></Header>\n                    <Routes>\n                        <Route path=\"/\" exact element={<Photos/>}></Route>\n                        <Route path=\"/login\" exact element={<Login/>}></Route>\n                        <Route path=\"/register\" element={<Register/>}></Route>\n                        <Route path=\"/logout\" element={<Logout/>}></Route>\n                    </Routes>\n                </div>\n            </UserContext.Provider>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}